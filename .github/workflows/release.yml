name: Release
on:
  push:
    tags:
      - 'v*'

jobs:
  create-release:
    permissions:
      contents: write
    runs-on: ubuntu-latest
    outputs:
      release_id: ${{ steps.create_release.outputs.id }}
    steps:
      - uses: actions/checkout@v4
      
      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: true
          prerelease: false

  build-and-upload:
    needs: create-release
    permissions:
      contents: write
    strategy:
      matrix:
        platform: [windows-latest, macos-latest]
        include:
          - platform: windows-latest
            output_path: target/release/bundle/msi/*.msi
            asset_type: application/x-msi
          - platform: macos-latest
            output_path: target/release/bundle/dmg/*.dmg
            asset_type: application/x-apple-diskimage
    runs-on: ${{ matrix.platform }}
    steps:
      - uses: actions/checkout@v4

      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'

      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable

      - name: Install dependencies
        run: npm install

      - name: Build the app
        run: npm run tauri build

      - name: Generate latest.json (Windows only)
        if: matrix.platform == 'windows-latest'
        shell: pwsh
        run: |
          $version = (Get-Content -Raw -Path package.json | ConvertFrom-Json).version
          $msiName = "ROI.Mailchimp.Reporter_${version}_x64_en-US.msi"
          $latestJson = @{
            version = $version
            notes = "Release $version"
            pub_date = (Get-Date).ToUniversalTime().ToString("yyyy-MM-ddTHH:mm:ssZ")
            platforms = @{
              "windows-x86_64" = @{
                signature = "dW50cnVzdGVkIGNvbW1lbnQ6IG1pbmlzaWduIHB1YmxpYyBrZXk6IDhFOUVGMTUyRjg4RTRDREQKUldUZFRJNzRVdkdlanNCZTUrT1ZyTWk3YXViQUNzWGVTRXhmWDRYdWx2MUMyTmF1Skp4UWs5ZnUK"
                url = "https://github.com/TimVanC/roi-mailchimp-reporter/releases/download/v${version}/${msiName}"
              }
            }
          }
          $latestJson | ConvertTo-Json -Depth 10 | Out-File -FilePath latest.json

      - name: Upload Release Asset
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: src-tauri/${{ matrix.output_path }}
          asset_name: ${{ matrix.platform == 'windows-latest' && format('ROI.Mailchimp.Reporter_{0}_x64_en-US.msi', github.ref_name) || format('ROI.Mailchimp.Reporter_{0}_x64.dmg', github.ref_name) }}
          asset_content_type: ${{ matrix.asset_type }}

      - name: Upload latest.json (Windows only)
        if: matrix.platform == 'windows-latest'
        uses: actions/upload-release-asset@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          upload_url: ${{ needs.create-release.outputs.upload_url }}
          asset_path: latest.json
          asset_name: latest.json
          asset_content_type: application/json

  publish-release:
    needs: [create-release, build-and-upload]
    permissions:
      contents: write
    runs-on: ubuntu-latest
    steps:
      - name: Publish Release
        uses: actions/github-script@v6
        with:
          script: |
            await github.rest.repos.updateRelease({
              owner: context.repo.owner,
              repo: context.repo.repo,
              release_id: ${{ needs.create-release.outputs.release_id }},
              draft: false
            }); 