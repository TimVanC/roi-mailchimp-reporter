name: Release
on:
  push:
    tags:
      - 'v*'

permissions:
  contents: write
  packages: write
  issues: write
  pull-requests: write

jobs:
  create-release:
    runs-on: ubuntu-latest
    outputs:
      upload_url: ${{ steps.create_release.outputs.upload_url }}
    steps:
      - uses: actions/checkout@v4
      - name: Create Release
        id: create_release
        uses: softprops/action-gh-release@v1
        with:
          draft: true
          prerelease: false
          name: ROI Mailchimp Reporter ${{ github.ref_name }}
          generate_release_notes: true

  build-windows:
    needs: create-release
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Install dependencies
        run: |
          npm install
          npm list
        
      - name: Check Rust setup
        run: |
          rustc --version
          cargo --version
          
      - name: Build
        run: |
          echo "Starting Tauri build..."
          npm run tauri build -- --verbose
        env:
          RUST_BACKTRACE: 1
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          
      - name: List build artifacts
        run: |
          dir src-tauri\target\release\bundle\msi\
          
      - name: Upload Windows Build
        uses: softprops/action-gh-release@v1
        with:
          files: |
            ./src-tauri/target/release/bundle/msi/ROI Mailchimp Reporter_${{ github.ref_name }}_x64_en-US.msi

  build-macos:
    needs: create-release
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v4
      
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install Rust
        uses: dtolnay/rust-toolchain@stable
        
      - name: Check Rust setup
        run: |
          rustc --version
          cargo --version
          
      - name: Install dependencies
        run: |
          npm install
          npm list
          
      - name: Debug pre-build
        run: |
          echo "Current directory structure:"
          pwd
          ls -la
          echo "Tauri directory:"
          ls -la src-tauri/
          echo "Package.json contents:"
          cat package.json
          echo "Tauri config:"
          cat src-tauri/tauri.conf.json
        
      - name: Build
        run: |
          echo "Starting Tauri build..."
          npm run tauri build -- --verbose
          echo "Build command completed"
          echo "Checking target directory structure:"
          ls -R src-tauri/target/
        env:
          RUST_BACKTRACE: full
          TAURI_SIGNING_PRIVATE_KEY: ${{ secrets.TAURI_PRIVATE_KEY }}
          TAURI_SIGNING_PRIVATE_KEY_PASSWORD: ${{ secrets.TAURI_KEY_PASSWORD }}
          
      - name: Debug Build Output
        if: always()
        run: |
          echo "Checking build output directories..."
          ls -la src-tauri/target/release/ || true
          echo "Checking bundle directory..."
          ls -la src-tauri/target/release/bundle/ || true
          echo "Checking macos directory..."
          ls -la src-tauri/target/release/bundle/macos/ || true
          echo "Checking for build logs..."
          find src-tauri/target -name "*.log" -exec cat {} \;
          
      - name: Create macOS ZIP
        run: |
          cd src-tauri/target/release/bundle/macos || {
            echo "Failed to cd into macos bundle directory"
            pwd
            exit 1
          }
          echo "Contents of macos bundle directory:"
          ls -la
          if [ ! -d "ROI Mailchimp Reporter.app" ]; then
            echo "Error: App bundle not found!"
            echo "Found these files instead:"
            ls -la
            exit 1
          fi
          zip -r ROIMailchimpReporter_macOS.zip ./"ROI Mailchimp Reporter.app"
          
      - name: Upload macOS Build
        uses: softprops/action-gh-release@v1
        with:
          files: ./src-tauri/target/release/bundle/macos/ROIMailchimpReporter_macOS.zip

  update-manifest:
    needs: [create-release, build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0
          
      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          
      - name: Install dependencies
        run: npm install
        
      - name: Generate update manifest
        run: node scripts/create-update.js
        
      - name: Commit and push update manifest
        run: |
          git config --local user.email "github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          git add updates.json
          git commit -m "Update release manifest for ${{ github.ref }}"
          git push 