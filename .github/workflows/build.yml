name: Build Tauri App

on:
  push:
    branches: [ main ]
    tags:
      - 'v*'
  pull_request:
    branches: [ main ]

jobs:
  debug:
    runs-on: ubuntu-latest
    steps:
      - name: Debug Information
        run: |
          echo "Event name: ${{ github.event_name }}"
          echo "Ref: ${{ github.ref }}"
          echo "Ref name: ${{ github.ref_name }}"
          echo "Is tag: ${{ startsWith(github.ref, 'refs/tags/') }}"
          echo "Is branch: ${{ startsWith(github.ref, 'refs/heads/') }}"

  build-windows:
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/'))
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-pc-windows-msvc
          override: true
      - name: Install dependencies
        run: npm ci
      - name: Build Tauri App
        run: npm run tauri build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: windows-artifacts
          path: src-tauri/target/release/bundle/msi/*.msi

  build-macos:
    if: github.event_name == 'push' && (startsWith(github.ref, 'refs/heads/') || startsWith(github.ref, 'refs/tags/'))
    runs-on: macos-latest
    steps:
      - uses: actions/checkout@v3
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      - name: Install Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: x86_64-apple-darwin
          override: true
      - name: Install dependencies
        run: npm ci
      - name: Build Tauri App
        run: npm run tauri build
      - name: Upload Artifacts
        uses: actions/upload-artifact@v4
        with:
          name: macos-artifacts
          path: src-tauri/target/release/bundle/dmg/*.dmg

  release:
    if: github.event_name == 'push' && startsWith(github.ref, 'refs/tags/')
    needs: [build-windows, build-macos]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Download Windows Artifacts
        uses: actions/download-artifact@v4
        with:
          name: windows-artifacts
          path: windows-artifacts
      - name: Download macOS Artifacts
        uses: actions/download-artifact@v4
        with:
          name: macos-artifacts
          path: macos-artifacts
      - name: Update latest.json
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          cat > src-tauri/latest.json << EOF
          {
            "version": "${VERSION}",
            "notes": "Release ${VERSION}",
            "pub_date": "$(date -u +"%Y-%m-%dT%H:%M:%SZ")",
            "platforms": {
              "darwin-x86_64": {
                "url": "https://github.com/TimVanC/roi-mailchimp-reporter/releases/download/v${VERSION}/ROI-Mailchimp-Reporter_${VERSION}_x64.dmg"
              },
              "darwin-aarch64": {
                "url": "https://github.com/TimVanC/roi-mailchimp-reporter/releases/download/v${VERSION}/ROI-Mailchimp-Reporter_${VERSION}_aarch64.dmg"
              },
              "windows-x86_64": {
                "url": "https://github.com/TimVanC/roi-mailchimp-reporter/releases/download/v${VERSION}/ROI.Mailchimp.Reporter_${VERSION}_x64_en-US.msi"
              }
            }
          }
          EOF
      - name: Release
        uses: ncipollo/release-action@v1
        with:
          tag: ${{ github.ref_name }}
          name: ROI Mailchimp Reporter ${{ github.ref_name }}
          artifacts: |
            windows-artifacts/*.msi
            macos-artifacts/*.dmg
            src-tauri/latest.json
          allowUpdates: true
          skipIfReleaseExists: false
          replacesArtifacts: true
          body: |
            Release ${{ github.ref_name }}
            - Updated tauri.conf.json
            - Updated build.yml
            - Generated latest.json for OTA updates
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 